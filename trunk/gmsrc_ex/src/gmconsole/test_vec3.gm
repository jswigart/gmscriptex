global printmem = function(before, after)
{
	print("sysGetMemoryUsage", 			sysGetMemoryUsage());
	print("sysGetDesiredMemoryUsageHard", 	sysGetDesiredMemoryUsageHard());
	print("sysGetDesiredMemoryUsageSoft", 	sysGetDesiredMemoryUsageSoft());	
	print("sysGetStatsGCNumFullCollects", 	sysGetStatsGCNumFullCollects());
	print("sysGetStatsGCNumIncCollects", 	sysGetStatsGCNumIncCollects());
};

testVec3 = function()
{
	print("Testing Vector3");
	
	v = Vec3(); 
	print(v);
	assert(v!=null);
	v = Vector3(); 
	print(v);
	assert(v!=null);
	v = null;
	
	vec1 = Vector3(10, 20, 30);
	vec2 = Vector3(10.5, 20.5, 30.5);
	print("vec1+ ", +vec1);
	print("vec1- ", -vec1);
	print("vec1 ", vec1);
	print("vec2 ", vec2);
	
	vec3 = vec1 + vec2;
	print("vec1 + vec2 ", vec3);
		
	assert(vec3.x == 20.5);
	assert(vec3.y == 40.5);
	assert(vec3.z == 60.5);
	
	vec4 = vec2 - vec1;
	print("vec1 - vec1 ", vec4);
	
	assert(vec4.x == 0.5);
	assert(vec4.y == 0.5);
	assert(vec4.z == 0.5);
	
	vec5 = vec1 * 2;
	print("vec1 * 2 ", vec5);
	
	assert(vec5.x == 20);
	assert(vec5.y == 40);
	assert(vec5.z == 60);
	
	vec6 = vec5 / 2;
	print("vec5 / 2 ", vec5);
	
	assert(vec6.x == vec1.x);
	assert(vec6.y == vec1.y);
	assert(vec6.z == vec1.z);
	
	assert(vec6 == vec1);
	
	length = vec6.Length();
	lengthSq = vec6.Length2();
	print("vec6 length ", length);
	print("vec6 lengthSq ", lengthSq);
	
	print("vec6 before normalize ", vec6);
	fNorm = vec6.Normalize();
	print("vec6 after normalize ", vec6);
	print("vec6 normalize returned ", fNorm);
	
	vec7 = vec5 - null;
	vec8 = null - vec5;
	
	print("vec7 ", vec7);
	print("vec8 ", vec8);
	
	print("Area",Area(vec1,vec2,vec3));
	
	print("AngleAxis1",AngleAxis(90,Vec3(0,0,1)));
	print("AngleAxis2",AngleAxis(180,Vec3(0,0,1)));
	
	print("ComputeNormal",ComputeNormal(vec1,vec2,vec3));
	print("CrossProduct",CrossProduct(vec1,vec2));
	print("DotProduct",DotProduct(vec1,vec2));
	print("Lerp",Lerp(vec1,vec2,0.5));
	print("Reflection",Reflection(vec1.Normalize(),-vec1.Normalize()));
	
	vec9 = Vec3(10,20,30);
	print("vec9 ", vec9);
	vec9 = vec9.SetXYZ(null,50,null);
	print("vec9 y = 50 ", vec9);
	
};

print("--------------------");
print("Testing Math Library");
testVec3();
print("Done");